"use strict";(self.webpackJsonp=self.webpackJsonp||[]).push([[5453],{"5453":function(A){A.exports=JSON.parse('{"version":3,"names":["splitUrl","_url","url","pos","res","path","query","fragment","indexOf","substring","addLeadingSlash","charAt","hasBasename","prefix","RegExp","test","stripBasename","length","stripSuffix","suffix","includes","getCurrentPage","routerMode","basename","pagePath","location","hash","slice","split","pathname","isAbsolute","spliceOne","list","index","i","k","n","pop","resolvePathname","to","from","undefined","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","hasTrailingSlash","last","up","part","unshift","result","join","substr","TabbarItem","_b","_c","isSelected","textColor","iconPath","badgeText","_d","showRedDot","text","onSelect","className","classNames","badgeStyle","position","top","right","dotStyle","onClick","page","Taro","getCurrentPages","shift","onTabItemTap","isVisible","this","h","key","href","class","style","display","src","alt","color","indexCss","STATUS_SHOW","STATUS_HIDE","STATUS_SLIDEOUT","basicTabBarClassName","hideTabBarClassName","hideTabBarWithAnimationClassName","Tabbar","hostRef","_this","homePage","customRoutes","tabbarPos","getOriginUrl","customRoute","filter","customUrl","pathA","pathB","getSelectedIndex","foundIndex","forEach","idx","switchTab","selectedIndex","switchTabHandler","successHandler","errorHandler","currentUrl","getCurrentUrl","nextTab","errMsg","routerChangeHandler","options","_a","toLocation","currentPage","routerBasename","conf","setTabBarBadgeHandler","__spreadArray","removeTabBarBadgeHandler","showTabBarRedDotHandler","hideTabBarRedDotHandler","showTabBarHandler","status","hideTabBarHandler","animation","setTabBarStyleHandler","selectedColor","backgroundColor","borderStyle","setTabBarItemHandler","selectedIconPath","Object","prototype","toString","call","Error","this_1","push","apply","map","p","item","routePath","mode","decodeURI","bindEvent","eventCenter","on","removeEvent","off","componentDidLoad","tabbar","nextElementSibling","disconnectedCallback","render","containerCls","shouldHideTabBar","shouldSlideout","Host","height","bind"],"sources":["src/utils/url.ts","../taro-router/dist/utils/index.js","../../node_modules/.pnpm/registry.npmjs.org+resolve-pathname@3.0.0/node_modules/resolve-pathname/esm/resolve-pathname.js","src/components/tabbar/tabbar-item.tsx","src/components/tabbar/style/index.scss?tag=taro-tabbar","src/components/tabbar/tabbar.tsx"],"sourcesContent":["export const normalizePath = url => {\\n  let _isRelative\\n  let _leadingParents = \'\'\\n  let _parent, _pos\\n\\n  // handle relative paths\\n  if (url.charAt(0) !== \'/\') {\\n    _isRelative = true\\n    url = \'/\' + url\\n  }\\n\\n  // handle relative files (as opposed to directories)\\n  if (url.substring(-3) === \'/..\' || url.slice(-2) === \'/.\') {\\n    url += \'/\'\\n  }\\n\\n  // resolve simples\\n  url = url.replace(/(\\\\/(\\\\.\\\\/)+)|(\\\\/\\\\.$)/g, \'/\').replace(/\\\\/{2,}/g, \'/\')\\n\\n  // remember leading parents\\n  if (_isRelative) {\\n    _leadingParents = url.substring(1).match(/^(\\\\.\\\\.\\\\/)+/) || \'\'\\n    if (_leadingParents) {\\n      _leadingParents = _leadingParents[0]\\n    }\\n  }\\n\\n  // resolve parents\\n  while (true) {\\n    _parent = url.search(/\\\\/\\\\.\\\\.(\\\\/|$)/)\\n    if (_parent === -1) {\\n      // no more ../ to resolve\\n      break\\n    } else if (_parent === 0) {\\n      // top level cannot be relative, skip it\\n      url = url.substring(3)\\n      continue\\n    }\\n\\n    _pos = url.substring(0, _parent).lastIndexOf(\'/\')\\n    if (_pos === -1) {\\n      _pos = _parent\\n    }\\n    url = url.substring(0, _pos) + url.substring(_parent + 3)\\n  }\\n\\n  // revert to relative\\n  if (_isRelative) {\\n    url = _leadingParents + url.substring(1)\\n  }\\n\\n  return url\\n}\\n\\nexport const splitUrl = _url => {\\n  let url = _url || \'\'\\n  let pos\\n  const res = {\\n    path: null,\\n    query: null,\\n    fragment: null\\n  }\\n\\n  pos = url.indexOf(\'#\')\\n  if (pos > -1) {\\n    res.fragment = url.substring(pos + 1)\\n    url = url.substring(0, pos)\\n  }\\n\\n  pos = url.indexOf(\'?\')\\n  if (pos > -1) {\\n    res.query = url.substring(pos + 1)\\n    url = url.substring(0, pos)\\n  }\\n\\n  res.path = url\\n\\n  return res\\n}\\n","// export const removeLeadingSlash = (str = \'\') => str.replace(/^\\\\.?\\\\//, \'\')\\n// export const removeTrailingSearch = (str = \'\') => str.replace(/\\\\?[\\\\s\\\\S]*$/, \'\')\\nexport const addLeadingSlash = (url = \'\') => (url.charAt(0) === \'/\' ? url : \'/\' + url);\\nexport const hasBasename = (path = \'\', prefix = \'\') => new RegExp(\'^\' + prefix + \'(\\\\\\\\/|\\\\\\\\?|#|$)\', \'i\').test(path) || path === prefix;\\nexport const stripBasename = (path = \'\', prefix = \'\') => hasBasename(path, prefix) ? path.substring(prefix.length) : path;\\nexport const stripTrailing = (str = \'\') => str.replace(/[?#][\\\\s\\\\S]*$/, \'\');\\nexport const stripSuffix = (path = \'\', suffix = \'\') => path.includes(suffix) ? path.substring(0, path.length - suffix.length) : path;\\nexport const getHomePage = (path = \'\', basename = \'\', customRoutes = {}, entryPagePath = \'\') => {\\n    var _a;\\n    const routePath = addLeadingSlash(stripBasename(path, basename));\\n    const alias = ((_a = Object.entries(customRoutes).find(([key]) => key === routePath)) === null || _a === void 0 ? void 0 : _a[1]) || routePath;\\n    return entryPagePath || (typeof alias === \'string\' ? alias : alias[0]) || basename;\\n};\\nexport const getCurrentPage = (routerMode = \'hash\', basename = \'/\') => {\\n    const pagePath = routerMode === \'hash\'\\n        ? location.hash.slice(1).split(\'?\')[0]\\n        : location.pathname;\\n    return addLeadingSlash(stripBasename(pagePath, basename));\\n};\\nclass RoutesAlias {\\n    constructor() {\\n        this.conf = [];\\n        this.getConfig = (url = \'\') => {\\n            const customRoute = this.conf.filter((arr) => {\\n                return arr.includes(url);\\n            });\\n            return customRoute[0];\\n        };\\n        this.getOrigin = (url = \'\') => {\\n            var _a;\\n            return ((_a = this.getConfig(url)) === null || _a === void 0 ? void 0 : _a[0]) || url;\\n        };\\n        this.getAlias = (url = \'\') => {\\n            var _a;\\n            return ((_a = this.getConfig(url)) === null || _a === void 0 ? void 0 : _a[1]) || url;\\n        };\\n        this.getAll = (url = \'\') => {\\n            return this.conf\\n                .filter((arr) => arr.includes(url))\\n                .reduceRight((p, a) => {\\n                p.unshift(a[1]);\\n                return p;\\n            }, []);\\n        };\\n    }\\n    set(customRoutes = {}) {\\n        for (let key in customRoutes) {\\n            const path = customRoutes[key];\\n            key = addLeadingSlash(key);\\n            if (typeof path === \'string\') {\\n                this.conf.push([key, addLeadingSlash(path)]);\\n            }\\n            else if ((path === null || path === void 0 ? void 0 : path.length) > 0) {\\n                this.conf.push(...path.map(p => [key, addLeadingSlash(p)]));\\n            }\\n        }\\n    }\\n}\\nexport const routesAlias = new RoutesAlias();\\n","function isAbsolute(pathname) {\\n  return pathname.charAt(0) === \'/\';\\n}\\n\\n// About 1.5x faster than the two-arg version of Array#splice()\\nfunction spliceOne(list, index) {\\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\\n    list[i] = list[k];\\n  }\\n\\n  list.pop();\\n}\\n\\n// This implementation is based heavily on node\'s url.parse\\nfunction resolvePathname(to, from) {\\n  if (from === undefined) from = \'\';\\n\\n  var toParts = (to && to.split(\'/\')) || [];\\n  var fromParts = (from && from.split(\'/\')) || [];\\n\\n  var isToAbs = to && isAbsolute(to);\\n  var isFromAbs = from && isAbsolute(from);\\n  var mustEndAbs = isToAbs || isFromAbs;\\n\\n  if (to && isAbsolute(to)) {\\n    // to is absolute\\n    fromParts = toParts;\\n  } else if (toParts.length) {\\n    // to is relative, drop the filename\\n    fromParts.pop();\\n    fromParts = fromParts.concat(toParts);\\n  }\\n\\n  if (!fromParts.length) return \'/\';\\n\\n  var hasTrailingSlash;\\n  if (fromParts.length) {\\n    var last = fromParts[fromParts.length - 1];\\n    hasTrailingSlash = last === \'.\' || last === \'..\' || last === \'\';\\n  } else {\\n    hasTrailingSlash = false;\\n  }\\n\\n  var up = 0;\\n  for (var i = fromParts.length; i >= 0; i--) {\\n    var part = fromParts[i];\\n\\n    if (part === \'.\') {\\n      spliceOne(fromParts, i);\\n    } else if (part === \'..\') {\\n      spliceOne(fromParts, i);\\n      up++;\\n    } else if (up) {\\n      spliceOne(fromParts, i);\\n      up--;\\n    }\\n  }\\n\\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift(\'..\');\\n\\n  if (\\n    mustEndAbs &&\\n    fromParts[0] !== \'\' &&\\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\\n  )\\n    fromParts.unshift(\'\');\\n\\n  var result = fromParts.join(\'/\');\\n\\n  if (hasTrailingSlash && result.substr(-1) !== \'/\') result += \'/\';\\n\\n  return result;\\n}\\n\\nexport default resolvePathname;\\n","import classNames from \'classnames\'\\nimport { FunctionalComponent, h } from \'@stencil/core\'\\nimport Taro from \'@tarojs/taro\'\\n\\nimport { isVisible } from \'../../utils\'\\n\\ntype TabbarItemProps = {\\n  index: number\\n  isSelected?: boolean\\n  textColor?: string\\n  badgeText?: string\\n  iconPath: string\\n  showRedDot?: boolean\\n  pagePath?: string\\n  text?: string\\n  onSelect: (index: number) => void\\n}\\n\\nexport const TabbarItem: FunctionalComponent<TabbarItemProps> = ({\\n  index,\\n  isSelected = false,\\n  textColor,\\n  iconPath,\\n  badgeText,\\n  showRedDot = false,\\n  pagePath,\\n  text,\\n  onSelect\\n}) => {\\n  const className = classNames(\'weui-tabbar__item\', {\\n    \'weui-bar__item_on\': isSelected\\n  })\\n  const badgeStyle = {\\n    position: \'absolute\',\\n    top: \'-2px\',\\n    right: \'-13px\'\\n  }\\n  const dotStyle = {\\n    position: \'absolute\',\\n    top: \'0\',\\n    right: \'-6px\'\\n  }\\n\\n  function onClick () {\\n    const page = Taro.getCurrentPages().shift()\\n    if (typeof page?.onTabItemTap === \'function\' && isVisible(this)) {\\n      page.onTabItemTap({ index, pagePath, text })\\n    }\\n    onSelect(index)\\n  }\\n\\n  return (\\n    <a key={index} href=\'javascript:;\' class={className} onClick={onClick}>\\n      <span style={{ display: \'inline-block\', position: \'relative\' }}>\\n        <img src={iconPath} alt=\'\' class=\'weui-tabbar__icon\' />\\n        {!!badgeText && (\\n          <span\\n            class=\'weui-badge taro-tabbar-badge\'\\n            style={badgeStyle}>\\n            {badgeText}\\n          </span>\\n        )}\\n        {showRedDot && (\\n          <span\\n            class=\'weui-badge weui-badge_dot\'\\n            style={dotStyle}\\n          />\\n        )}\\n      </span>\\n      <p class=\'weui-tabbar__label\' style={{ color: textColor }}>\\n        {text}\\n      </p>\\n    </a>\\n  )\\n}\\n","html,\\nbody {\\n  height: 100%;\\n}\\n\\n#app {\\n  height: 100%;\\n}\\n\\n.taro-tabbar {\\n  &__border {\\n    &-white {\\n      &::before {\\n        border-top-color: #fff !important;\\n      }\\n    }\\n  }\\n\\n  &__container {\\n    display: flex;\\n    overflow: hidden;\\n    flex-direction: column;\\n    height: 100%;\\n  }\\n\\n  &__panel {\\n    overflow: auto;\\n    position: relative;\\n    flex: 1;\\n    -webkit-overflow-scrolling: auto;\\n  }\\n\\n  &__tabbar {\\n    position: relative;\\n    width: 100%;\\n    height: 50px;\\n    transition: bottom 0.2s, top 0.2s;\\n\\n    &-top {\\n      top: 0;\\n    }\\n\\n    &-bottom {\\n      bottom: 0;\\n      margin-bottom: constant(safe-area-inset-bottom);\\n      margin-bottom: env(safe-area-inset-bottom);\\n    }\\n\\n    &-hide {\\n      display: none;\\n    }\\n\\n    &-slideout {\\n      top: -52px;\\n      flex: 0 0;\\n    }\\n  }\\n\\n  &__panel + &__tabbar-slideout {\\n    top: auto;\\n    bottom: -52px;\\n  }\\n}\\n","import { Component, Prop, h, ComponentInterface, Host, State, Event, EventEmitter, Element } from \'@stencil/core\'\\nimport Taro from \'@tarojs/taro\'\\nimport { addLeadingSlash, getCurrentPage, stripBasename, stripSuffix } from \'@tarojs/router/dist/utils\'\\nimport { IH5RouterConfig } from \'@tarojs/taro/types/compile\'\\nimport classNames from \'classnames\'\\nimport resolvePathname from \'resolve-pathname\'\\n\\nimport { splitUrl } from \'../../utils\'\\nimport { TabbarItem } from \'./tabbar-item\'\\n\\nconst STATUS_SHOW = 0\\nconst STATUS_HIDE = 1\\nconst STATUS_SLIDEOUT = 2\\n\\nconst basicTabBarClassName = \'taro-tabbar__tabbar\'\\nconst hideTabBarClassName = \'taro-tabbar__tabbar-hide\'\\nconst hideTabBarWithAnimationClassName = \'taro-tabbar__tabbar-slideout\'\\n\\ninterface RouterHandler {\\n  index: string\\n  text: string\\n  url: string\\n  successHandler: Function\\n  errorHandler: Function\\n  animation?: boolean\\n}\\n\\nexport interface Conf {\\n  color: string\\n  selectedColor: string\\n  backgroundColor: string\\n  borderStyle?: \'black\' | \'white\'\\n  list: TabbarList[]\\n  position?: \'bottom\' | \'top\'\\n  custom: boolean\\n  customRoutes: Record<string, string | string[]>\\n  mode: IH5RouterConfig[\'mode\']\\n  basename: string\\n  homePage: string\\n  currentPagename: string\\n}\\n\\ninterface TabbarList {\\n  pagePath: string\\n  text: string\\n  iconPath?: string\\n  selectedIconPath?: string\\n  badgeText?: string\\n  showRedDot?: boolean\\n}\\n\\n@Component({\\n  tag: \'taro-tabbar\',\\n  styleUrl: \'./style/index.scss\'\\n})\\nexport class Tabbar implements ComponentInterface {\\n  private homePage = \'\'\\n\\n  private customRoutes: Array<string[]> = []\\n\\n  private tabbarPos: \'top\' | \'bottom\' = \'bottom\'\\n\\n  @Prop() conf: Conf\\n\\n  @State() list: TabbarList[]\\n\\n  @State() borderStyle: Conf[\'borderStyle\']\\n\\n  @State() backgroundColor: Conf[\'backgroundColor\']\\n\\n  @State() color: Conf[\'color\']\\n\\n  @State() selectedColor: Conf[\'selectedColor\']\\n\\n  @State() selectedIndex = -1\\n\\n  @State() status: 0 | 1 | 2 = STATUS_SHOW\\n\\n  @Event({\\n    eventName: \'longpress\'\\n  }) onLongPress: EventEmitter\\n\\n  @Element() tabbar: HTMLDivElement\\n\\n  constructor () {\\n    const list = this.conf.list\\n    const customRoutes = this.conf.customRoutes\\n    if (\\n      Object.prototype.toString.call(list) !== \'[object Array]\' ||\\n      list.length < 2 ||\\n      list.length > 5\\n    ) {\\n      throw new Error(\'tabBar 配置错误\')\\n    }\\n\\n    this.homePage = addLeadingSlash(this.conf.homePage)\\n    for (let key in customRoutes) {\\n      const path = customRoutes[key]\\n      key = addLeadingSlash(key)\\n      if (typeof path === \'string\') {\\n        this.customRoutes.push([key, addLeadingSlash(path)])\\n      } else if (path?.length > 0) {\\n        this.customRoutes.push(...path.map(p => [key, addLeadingSlash(p)]))\\n      }\\n    }\\n\\n    list.forEach(item => {\\n      if (item.pagePath.indexOf(\'/\') !== 0) {\\n        item.pagePath = \'/\' + item.pagePath\\n      }\\n    })\\n\\n    this.list = list\\n    this.borderStyle = this.conf.borderStyle\\n    this.backgroundColor = this.conf.backgroundColor\\n    this.color = this.conf.color\\n    this.selectedColor = this.conf.selectedColor\\n  }\\n\\n  getCurrentUrl () {\\n    const routePath = getCurrentPage(this.conf.mode, this.conf.basename)\\n    return decodeURI(routePath === \'/\' ? this.homePage : routePath)\\n  }\\n\\n  getOriginUrl = (url: string) => {\\n    const customRoute = this.customRoutes.filter(([, customUrl]) => {\\n      const pathA = splitUrl(customUrl).path\\n      const pathB = splitUrl(url).path\\n      return pathA === pathB\\n    })\\n    return stripSuffix(customRoute.length ? customRoute[0][0] : url, \'.html\')\\n  }\\n\\n  getSelectedIndex = (url: string) => {\\n    let foundIndex = -1\\n    this.list.forEach(({ pagePath }, idx) => {\\n      const pathA = splitUrl(url).path\\n      const pathB = splitUrl(pagePath).path\\n      if (pathA === pathB) {\\n        foundIndex = idx\\n      }\\n    })\\n    return foundIndex\\n  }\\n\\n  switchTab = (index: number) => {\\n    this.selectedIndex = index\\n    Taro.switchTab({\\n      url: this.list[index].pagePath\\n    })\\n  }\\n\\n  switchTabHandler = ({ url, successHandler, errorHandler }: RouterHandler) => {\\n    const currentUrl = this.getOriginUrl(this.getCurrentUrl() || this.homePage)\\n    const nextTab = resolvePathname(url, currentUrl)\\n    const foundIndex = this.getSelectedIndex(nextTab)\\n\\n    if (foundIndex > -1) {\\n      this.switchTab(foundIndex)\\n      successHandler({\\n        errMsg: \'switchTab:ok\'\\n      })\\n    } else {\\n      errorHandler({\\n        errMsg: `switchTab:fail page \\"${nextTab}\\" is not found`\\n      })\\n    }\\n  }\\n\\n  routerChangeHandler = (options?) => {\\n    const to = options?.toLocation?.path\\n    let currentPage\\n\\n    if (typeof to === \'string\') {\\n      const routerBasename = this.conf.basename || \'/\'\\n      currentPage = stripBasename(addLeadingSlash(to || this.homePage), routerBasename) || \'/\'\\n    } else {\\n      currentPage = this.getCurrentUrl()\\n    }\\n\\n    this.selectedIndex = this.getSelectedIndex(this.getOriginUrl(currentPage))\\n  }\\n\\n  setTabBarBadgeHandler = ({ index, text, successHandler, errorHandler }: RouterHandler) => {\\n    const list = [...this.list]\\n    if (index in list) {\\n      list[index].showRedDot = false\\n      list[index].badgeText = text\\n      successHandler({\\n        errMsg: \'setTabBarBadge:ok\'\\n      })\\n    } else {\\n      errorHandler({\\n        errMsg: \'setTabBarBadge:fail tabbar item not found\'\\n      })\\n    }\\n\\n    this.list = list\\n  }\\n\\n  removeTabBarBadgeHandler = ({ index, successHandler, errorHandler }: RouterHandler) => {\\n    const list = [...this.list]\\n    if (index in list) {\\n      list[index].badgeText = null\\n      list[index].badgeText = null\\n      successHandler({\\n        errMsg: \'removeTabBarBadge:ok\'\\n      })\\n    } else {\\n      errorHandler({\\n        errMsg: \'removeTabBarBadge:fail tabbar item not found\'\\n      })\\n    }\\n\\n    this.list = list\\n  }\\n\\n  showTabBarRedDotHandler = ({ index, successHandler, errorHandler }: RouterHandler) => {\\n    const list = [...this.list]\\n    if (index in list) {\\n      list[index].badgeText = null\\n      list[index].showRedDot = true\\n      successHandler({\\n        errMsg: \'showTabBarRedDot:ok\'\\n      })\\n    } else {\\n      errorHandler({\\n        errMsg: \'showTabBarRedDot:fail tabbar item not found\'\\n      })\\n    }\\n\\n    this.list = list\\n  }\\n\\n  hideTabBarRedDotHandler = ({ index, successHandler, errorHandler }: RouterHandler) => {\\n    const list = [...this.list]\\n    if (index in list) {\\n      list[index].showRedDot = false\\n      successHandler({\\n        errMsg: \'hideTabBarRedDot:ok\'\\n      })\\n    } else {\\n      errorHandler({\\n        errMsg: \'hideTabBarRedDot:fail tabbar item not found\'\\n      })\\n    }\\n\\n    this.list = list\\n  }\\n\\n  showTabBarHandler = ({ successHandler }) => {\\n    this.status = STATUS_SHOW\\n    successHandler({\\n      errMsg: \'showTabBar:ok\'\\n    })\\n  }\\n\\n  hideTabBarHandler = ({ animation, successHandler }) => {\\n    this.status = animation ? STATUS_SLIDEOUT : STATUS_HIDE\\n    successHandler({\\n      errMsg: \'hideTabBar:ok\'\\n    })\\n  }\\n\\n  setTabBarStyleHandler = ({ color, selectedColor, backgroundColor, borderStyle, successHandler }) => {\\n    if (backgroundColor) this.backgroundColor = backgroundColor\\n    if (borderStyle) this.borderStyle = borderStyle\\n    if (color) this.color = color\\n    if (selectedColor) this.selectedColor = selectedColor\\n    successHandler({\\n      errMsg: \'setTabBarStyle:ok\'\\n    })\\n  }\\n\\n  setTabBarItemHandler = ({ index, iconPath, selectedIconPath, text, successHandler, errorHandler }) => {\\n    const list = [...this.list]\\n    if (index in list) {\\n      if (iconPath) list[index].iconPath = iconPath\\n      if (selectedIconPath) list[index].selectedIconPath = selectedIconPath\\n      if (text) list[index].text = text\\n      successHandler({\\n        errMsg: \'setTabBarItem:ok\'\\n      })\\n    } else {\\n      errorHandler({\\n        errMsg: \'setTabBarItem:fail tabbar item not found\'\\n      })\\n    }\\n\\n    this.list = list\\n  }\\n\\n  bindEvent () {\\n    Taro.eventCenter.on(\'__taroRouterChange\', this.routerChangeHandler)\\n    Taro.eventCenter.on(\'__taroSwitchTab\', this.switchTabHandler)\\n    Taro.eventCenter.on(\'__taroSetTabBarBadge\', this.setTabBarBadgeHandler)\\n    Taro.eventCenter.on(\'__taroRemoveTabBarBadge\', this.removeTabBarBadgeHandler)\\n    Taro.eventCenter.on(\'__taroShowTabBarRedDotHandler\', this.showTabBarRedDotHandler)\\n    Taro.eventCenter.on(\'__taroHideTabBarRedDotHandler\', this.hideTabBarRedDotHandler)\\n    Taro.eventCenter.on(\'__taroShowTabBar\', this.showTabBarHandler)\\n    Taro.eventCenter.on(\'__taroHideTabBar\', this.hideTabBarHandler)\\n    Taro.eventCenter.on(\'__taroSetTabBarStyle\', this.setTabBarStyleHandler)\\n    Taro.eventCenter.on(\'__taroSetTabBarItem\', this.setTabBarItemHandler)\\n  }\\n\\n  removeEvent () {\\n    Taro.eventCenter.off(\'__taroRouterChange\', this.routerChangeHandler)\\n    Taro.eventCenter.off(\'__taroSwitchTab\', this.switchTabHandler)\\n    Taro.eventCenter.off(\'__taroSetTabBarBadge\', this.setTabBarBadgeHandler)\\n    Taro.eventCenter.off(\'__taroRemoveTabBarBadge\', this.removeTabBarBadgeHandler)\\n    Taro.eventCenter.off(\'__taroShowTabBarRedDotHandler\', this.showTabBarRedDotHandler)\\n    Taro.eventCenter.off(\'__taroHideTabBarRedDotHandler\', this.hideTabBarRedDotHandler)\\n    Taro.eventCenter.off(\'__taroShowTabBar\', this.showTabBarHandler)\\n    Taro.eventCenter.off(\'__taroHideTabBar\', this.hideTabBarHandler)\\n    Taro.eventCenter.off(\'__taroSetTabBarStyle\', this.setTabBarStyleHandler)\\n    Taro.eventCenter.off(\'__taroSetTabBarItem\', this.setTabBarItemHandler)\\n  }\\n\\n  componentDidLoad () {\\n    this.tabbarPos = this.tabbar.nextElementSibling ? \'top\' : \'bottom\'\\n    this.bindEvent()\\n    this.routerChangeHandler()\\n  }\\n\\n  disconnectedCallback () {\\n    this.removeEvent()\\n  }\\n\\n  render () {\\n    const { tabbarPos = \'bottom\' } = this\\n    const status = this.status\\n    const containerCls = classNames(\'weui-tabbar\', {\\n      [`taro-tabbar__border-${this.borderStyle || \'black\'}`]: true\\n    })\\n    const shouldHideTabBar = this.selectedIndex === -1 || status === STATUS_HIDE\\n    const shouldSlideout = status === STATUS_SLIDEOUT\\n\\n    return (\\n      <Host\\n        class={classNames(\\n          basicTabBarClassName,\\n          `${basicTabBarClassName}-${tabbarPos}`, {\\n            [hideTabBarClassName]: shouldHideTabBar,\\n            [hideTabBarWithAnimationClassName]: shouldSlideout\\n          })} >\\n        <div\\n          class={containerCls}\\n          style={{\\n            backgroundColor: this.backgroundColor || \'\',\\n            height: \'inherit\'\\n          }}\\n        >\\n          {this.list.map((item, index) => {\\n            const isSelected = this.selectedIndex === index\\n            let textColor\\n            let iconPath\\n            if (isSelected) {\\n              textColor = this.selectedColor || \'\'\\n              iconPath = item.selectedIconPath\\n            } else {\\n              textColor = this.color || \'\'\\n              iconPath = item.iconPath\\n            }\\n            return (\\n              <TabbarItem\\n                index={index}\\n                onSelect={this.switchTab.bind(this)}\\n                isSelected={isSelected}\\n                textColor={textColor}\\n                iconPath={iconPath}\\n                pagePath={item.pagePath}\\n                text={item.text}\\n                badgeText={item.badgeText}\\n                showRedDot={item.showRedDot}\\n              />\\n            )\\n          })}\\n        </div>\\n      </Host>\\n    )\\n  }\\n}\\n"],"mappings":"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"}')}}]);