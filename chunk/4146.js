"use strict";(self.webpackJsonp=self.webpackJsonp||[]).push([[4146],{"4146":function(A){A.exports=JSON.parse('{"version":3,"names":["getTimeRange","begin","end","range","i","push","concat","hoursRange","__spreadArray","minutesRange","verifyValue","value","isNaN","length","verifyTime","test","time","split","map","num","compareTime","t1","t2","t1List","t2List","verifyDate","dateStr","date","Date","replace","getMonth","getMaxDay","year","month","formatValue","res","Array","isArray","item","String","getDateRange","start","getYearRange","getMonthRange","rangeStart","rangeEnd","getFullYear","getDayRange","getDate","TOP","LINE_HEIGHT","MASK_HEIGHT","indexCss","Picker","this","index","showPicker","_this","disabled","height","getHeightByIndex","hidden","factor","mode","hidePicker","fadeOut","setTimeout","handleChange","h","range_1","slice","timeArr","n","parseInt","join","_b","pickerDate","_start","_end","_updateValue","currentYear","currentMonth","yearRange","monthRange","dayRange","day","fields","pickerValue","onChange","emit","handleCancel","onCancel","updateHeight","columnId","needRevise","temp","range_2","timeList","timeStr","height_1","requestAnimationFrame","height_2","handleColumnChange","onColumnChange","column","Number","updateDay","currentDay","max","min","indexOf","getSelector","rangeKey","getMultiSelector","getTimeSelector","hourRange","minRange","getDateSelector","_c","renderView","prototype","componentWillLoad","isWillLoadCalled","handleProps","componentDidLoad","Object","defineProperty","el","get","set","val","configurable","overlay","document","body","appendChild","disconnectedCallback","_a","parentNode","removeChild","onPropsChange","Math","floor","value_1","forEach","console","warn","_value","setHours","getTime","Error","render","name","pickerGroup","clsMask","classNames","clsSlider","shouldDivHidden","display","Host","onClick","type","class","style","ref","TaroPickerGroup","getPosition","transition","touchEnd","transformValue","transitionValue","transform","formulaUnlimitedScroll","absoluteHeight","direction","round","relativeHeight","handleMoveStart","clientY","startY","preY","hadMove","handleMoving","y","deltaY","abs","newPos","handleMoveEnd","endY","windowHeight","window","innerHeight","relativeY","onMouseDown","e","isMove","onMouseMove","preventDefault","onMouseMoveEnd","onTouchStart","changedTouches","onTouchMove","onTouchEnd","pickerItem","content"],"sources":["src/components/picker/utils.ts","src/components/picker/constant.ts","src/components/picker/style/index.scss?tag=taro-picker-core","src/components/picker/picker.tsx","src/components/picker/picker-group.tsx"],"sourcesContent":["function getTimeRange (begin: number, end: number) {\\n  const range: string[] = []\\n  for (let i = begin; i <= end; i++) {\\n    range.push(`${i < 10 ? \'0\' : \'\'}${i}`)\\n  }\\n  return range\\n}\\n\\nexport const hoursRange = [\\n  \'20\',\\n  \'21\',\\n  \'22\',\\n  \'23\',\\n  ...getTimeRange(0, 23),\\n  \'00\',\\n  \'01\',\\n  \'02\',\\n  \'03\'\\n]\\n\\nexport const minutesRange = [\\n  \'56\',\\n  \'57\',\\n  \'58\',\\n  \'59\',\\n  ...getTimeRange(0, 59),\\n  \'00\',\\n  \'01\',\\n  \'02\',\\n  \'03\'\\n]\\n\\n/**\\n * 校验传入的 value 是否合法\\n */\\nexport function verifyValue (value: number, range: any[]) {\\n  if (!isNaN(+value) && value >= 0 && value < range.length) return true\\n  return false\\n}\\n\\n/**\\n * 检验传入的 time value 是否合法\\n */\\nexport function verifyTime (value: string) {\\n  if (!/^\\\\d{1,2}:\\\\d{1,2}$/.test(value)) return false\\n\\n  const time = value.split(\':\').map(num => +num)\\n\\n  if (time[0] < 0 || time[0] > 23) return false\\n  if (time[1] < 0 || time[1] > 59) return false\\n\\n  return true\\n}\\n\\n/**\\n * 比较时间\\n * return t1 <= t2\\n */\\nexport function compareTime (t1: string, t2: string) {\\n  const t1List = t1.split(\':\').map(i => +i)\\n  const t2List = t2.split(\':\').map(i => +i)\\n\\n  if (t1List[0] < t2List[0]) return true\\n  if (t1List[0] === t2List[0] && t1List[1] <= t2List[1]) return true\\n\\n  return false\\n}\\n\\n/**\\n * 校验日期合法性，返回合法性和日期数组\\n */\\nexport function verifyDate (dateStr: string) {\\n  if (!dateStr) return false\\n  const date = new Date(dateStr.replace(/-/g, \'/\'))\\n  return isNaN(date.getMonth()) ? false : date\\n}\\n\\n/**\\n * 获取当月最大天数\\n */\\nfunction getMaxDay (year: number, month: number) {\\n  if (month === 4 || month === 6 || month === 9 || month === 11) return 30\\n  if (month === 2) {\\n    if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) return 29\\n    else return 28\\n  }\\n  return 31\\n}\\n\\nexport function formatValue (value: number | number[] | string) {\\n  let res: number | string | string[]\\n  if (Array.isArray(value)) {\\n    res = value.map(item => String(item))\\n  } else {\\n    res = value\\n  }\\n  return res\\n}\\n\\n/**\\n * 获取时间数组\\n */\\nfunction getDateRange (start: number, end: number) {\\n  const range: number[] = []\\n  for (let i = start; i <= end; i++) {\\n    range.push(i)\\n  }\\n  return range\\n}\\n\\n/**\\n * 获取年份区间数组\\n */\\nexport function getYearRange (start: number, end: number) {\\n  return getDateRange(start, end)\\n}\\n\\n/**\\n * 获取月份区间数组\\n */\\nexport function getMonthRange (start: Date, end: Date, year: number) {\\n  let rangeStart = 1\\n  let rangeEnd = 12\\n\\n  // 当前年份等于开始年份，由开始对应的月份约束开始值\\n  if (start.getFullYear() === year) {\\n    rangeStart = start.getMonth() + 1\\n  }\\n\\n  // 当前年份等于结束年份，由结束对应的月份约束结束值\\n  if (end.getFullYear() === year) {\\n    rangeEnd = end.getMonth() + 1\\n  }\\n\\n  return getDateRange(rangeStart, rangeEnd)\\n}\\n\\n/**\\n * 获取日期区间数组\\n */\\nexport function getDayRange (start: Date, end: Date, year: number, month: number) {\\n  let rangeStart = 1\\n  let rangeEnd = getMaxDay(year, month)\\n\\n  if (start.getFullYear() === year && start.getMonth() + 1 === month) {\\n    rangeStart = start.getDate()\\n  }\\n\\n  if (end.getFullYear() === year && end.getMonth() + 1 === month) {\\n    rangeEnd = end.getDate()\\n  }\\n\\n  return getDateRange(rangeStart, rangeEnd)\\n}\\n","export const TOP = 102\\nexport const LINE_HEIGHT = 34\\nexport const MASK_HEIGHT = LINE_HEIGHT * 7\\n",".weui-picker,\\n.weui-picker__hd {\\n  font-size: 12px;\\n}\\n","import { Component, h, ComponentInterface, Prop, Event, EventEmitter, Host, State, Watch, Element } from \'@stencil/core\'\\nimport classNames from \'classnames\'\\nimport {\\n  hoursRange,\\n  minutesRange,\\n  compareTime,\\n  verifyValue,\\n  verifyTime,\\n  verifyDate,\\n  getYearRange,\\n  getMonthRange,\\n  getDayRange,\\n  formatValue\\n} from \'./utils\'\\nimport {\\n  TOP,\\n  LINE_HEIGHT\\n} from \'./constant\'\\n\\nexport type Mode = \'selector\' | \'multiSelector\' | \'time\' | \'date\'\\nexport type Fields = \'day\' | \'month\' | \'year\'\\nexport type PickerValue = number | number[] | string\\n\\nexport interface PickerDate {\\n  _value: Date\\n  _start: Date\\n  _end: Date\\n  _updateValue: [number, number, number]\\n}\\n\\n@Component({\\n  tag: \'taro-picker-core\',\\n  styleUrl: \'./style/index.scss\'\\n})\\nexport class Picker implements ComponentInterface {\\n  private index: number[] = []\\n  private pickerDate: PickerDate\\n  private overlay?: HTMLElement\\n\\n  @Element() el: HTMLElement\\n\\n  @Prop() mode: Mode = \'selector\'\\n  @Prop() disabled = false\\n  @Prop() range: any[] = []\\n  @Prop() rangeKey: string\\n  @Prop({ mutable: true }) value: number | number[] | string\\n  @Prop() start = \'\'\\n  @Prop() end = \'\'\\n  @Prop() fields: Fields = \'day\'\\n  @Prop() name = \'\'\\n\\n  @State() pickerValue: PickerValue = []\\n  @State() height: number[] = []\\n  @State() hidden = true\\n  @State() fadeOut = false\\n  @State() isWillLoadCalled = false\\n\\n  @Event({\\n    eventName: \'change\'\\n  }) onChange: EventEmitter\\n\\n  @Event({\\n    eventName: \'columnchange\'\\n  }) onColumnChange: EventEmitter\\n\\n  @Event({\\n    eventName: \'cancel\'\\n  }) onCancel: EventEmitter\\n\\n  componentWillLoad () {\\n    this.isWillLoadCalled = true\\n    this.handleProps()\\n  }\\n\\n  componentDidLoad () {\\n    Object.defineProperty(this.el, \'value\', {\\n      get: () => this.pickerValue,\\n      set: val => (this.value = val),\\n      configurable: true\\n    })\\n\\n    if (this.overlay) {\\n      document.body.appendChild(this.overlay)\\n    }\\n  }\\n\\n  disconnectedCallback () {\\n    if (this.overlay) {\\n      this.overlay.parentNode?.removeChild(this.overlay)\\n    }\\n  }\\n\\n  @Watch(\'mode\')\\n  @Watch(\'value\')\\n  @Watch(\'range\')\\n  @Watch(\'start\')\\n  @Watch(\'end\')\\n  onPropsChange () {\\n    if (!this.isWillLoadCalled) return\\n    this.handleProps()\\n  }\\n\\n  handleProps () {\\n    const { mode, start, end } = this\\n\\n    if (mode === \'selector\') {\\n      const value = this.value as number\\n      this.index = [verifyValue(value, this.range) ? Math.floor(value) : 0]\\n    } else if (mode === \'multiSelector\') {\\n      const value = this.value as number[]\\n      this.index = []\\n      this.range.forEach((range, index) => {\\n        const val = value?.[index]\\n        const item = verifyValue(val, range as any[]) ? Math.floor(val) : 0\\n        this.index.push(item)\\n      })\\n    } else if (mode === \'time\') {\\n      let value = this.value as string\\n      // check value...\\n      if (!verifyTime(value)) {\\n        console.warn(\'time picker value illegal\')\\n        value = \'0:0\'\\n      }\\n\\n      const time = value.split(\':\').map(n => +n)\\n      this.index = time\\n    } else if (mode === \'date\') {\\n      const value = this.value as string\\n\\n      const _value = verifyDate(value) || new Date(new Date().setHours(0, 0, 0, 0)) // 没传值或值的合法性错误默认今天时间\\n      const _start = verifyDate(start) || new Date(\'1970/01/01\')\\n      const _end = verifyDate(end) || new Date(\'2999/01/01\')\\n\\n      // 时间区间有效性\\n      if (_value >= _start && _value <= _end) {\\n        const currentYear = _value.getFullYear()\\n        const currentMonth = _value.getMonth() + 1\\n        const currentDay = _value.getDate()\\n        const yearRange = getYearRange(_start.getFullYear(), _end.getFullYear())\\n        const monthRange = getMonthRange(_start, _end, currentYear)\\n        const dayRange = getDayRange(_start, _end, currentYear, currentMonth)\\n\\n        this.index = [\\n          yearRange.indexOf(currentYear),\\n          monthRange.indexOf(currentMonth),\\n          dayRange.indexOf(currentDay)\\n        ]\\n        if (\\n          !this.pickerDate ||\\n          this.pickerDate._value.getTime() !== _value.getTime() ||\\n          this.pickerDate._start.getTime() !== _start.getTime() ||\\n          this.pickerDate._end.getTime() !== _end.getTime()\\n        ) {\\n          this.pickerDate = {\\n            _value,\\n            _start,\\n            _end,\\n            _updateValue: [\\n              currentYear,\\n              currentMonth,\\n              currentDay\\n            ]\\n          }\\n        }\\n      } else {\\n        throw new Error(\'Date Interval Error\')\\n      }\\n    }\\n\\n    // Prop 变化时，无论是否正在显示弹层，都更新 height 值\\n    this.height = this.getHeightByIndex()\\n\\n    // 同步表单 value 值，用于 form submit\\n    this.pickerValue = this.value\\n    if (mode === \'date\') {\\n      const val = this.pickerValue as string\\n      if (this.fields === \'month\') {\\n        this.pickerValue = val.split(\'-\').slice(0, 2).join(\'-\')\\n      } else if (this.fields === \'year\') {\\n        this.pickerValue = val.split(\'-\')[0]\\n      }\\n    }\\n  }\\n\\n  // 展示 Picker\\n  showPicker = () => {\\n    if (this.disabled) return\\n\\n    this.height = this.getHeightByIndex()\\n    this.hidden = false\\n  }\\n\\n  getHeightByIndex = () => {\\n    const height = this.index.map(i => {\\n      let factor = 0\\n      if (this.mode === \'time\') {\\n        factor = LINE_HEIGHT * 4\\n      }\\n      return TOP - LINE_HEIGHT * i - factor\\n    })\\n    return height\\n  }\\n\\n  // 隐藏 picker\\n  hidePicker = () => {\\n    this.fadeOut = true\\n    setTimeout(() => {\\n      this.hidden = true\\n      this.fadeOut = false\\n    }, 350)\\n  }\\n\\n  // 点击确定按钮\\n  handleChange = () => {\\n    this.hidePicker()\\n\\n    this.index = this.height.map(h => (TOP - h) / LINE_HEIGHT)\\n\\n    let value: PickerValue = this.index.length && this.mode !== \'selector\'\\n      ? this.index\\n      : this.index[0]\\n\\n    if (this.mode === \'time\') {\\n      const range = [hoursRange.slice(), minutesRange.slice()]\\n\\n      const timeArr = this.index.map<string>((n, i) => range[i][n])\\n\\n      this.index = timeArr.map(item => parseInt(item))\\n      value = timeArr.join(\':\')\\n    }\\n\\n    if (this.mode === \'date\') {\\n      const { _start, _end, _updateValue } = this.pickerDate\\n      const currentYear = _updateValue[0]\\n      const currentMonth = _updateValue[1]\\n      const yearRange = getYearRange(_start.getFullYear(), _end.getFullYear())\\n      const monthRange = getMonthRange(_start, _end, currentYear)\\n      const dayRange = getDayRange(_start, _end, currentYear, currentMonth)\\n\\n      const year = yearRange[this.index[0]]\\n      const month = monthRange[this.index[1]]\\n      const day = dayRange[this.index[2]]\\n\\n      if (this.fields === \'year\') {\\n        value = [year]\\n      } else if (this.fields === \'month\') {\\n        value = [year, month]\\n      } else {\\n        value = [year, month, day]\\n      }\\n      value = value\\n        .map(item => {\\n          return item < 10 ? `0${item}` : item\\n        })\\n        .join(\'-\')\\n    }\\n\\n    this.pickerValue = value\\n\\n    this.onChange.emit({\\n      value\\n    })\\n  }\\n\\n  // 点击取消按钮或蒙层\\n  handleCancel = () => {\\n    this.hidePicker()\\n    this.onCancel.emit()\\n  }\\n\\n  updateHeight = (height: number, columnId: string, needRevise = false) => {\\n    const temp = [...this.height]\\n    temp[columnId] = height\\n    this.height = temp\\n\\n    // time picker 必须在规定时间范围内，因此需要在 touchEnd 做修正\\n    if (needRevise) {\\n      let { start, end } = this\\n\\n      if (!verifyTime(start)) start = \'00:00\'\\n      if (!verifyTime(end)) end = \'23:59\'\\n      if (!compareTime(start, end)) return\\n\\n      const range = [hoursRange.slice(), minutesRange.slice()]\\n\\n      const timeList = this.height.map(h => (TOP - h) / LINE_HEIGHT)\\n      const timeStr = timeList.map((n, i) => range[i][n]).join(\':\')\\n\\n      if (!compareTime(start, timeStr)) {\\n        // 修正到 start\\n        const height = start\\n          .split(\':\')\\n          .map(i => TOP - LINE_HEIGHT * (+i + 4))\\n        requestAnimationFrame(() => (this.height = height))\\n      } else if (!compareTime(timeStr, end)) {\\n        // 修正到 end\\n        const height = end\\n          .split(\':\')\\n          .map(i => TOP - LINE_HEIGHT * (+i + 4))\\n        requestAnimationFrame(() => (this.height = height))\\n      }\\n    }\\n  }\\n\\n  handleColumnChange = (height: number, columnId: string) => {\\n    this.onColumnChange.emit({\\n      column: Number(columnId),\\n      value: (TOP - height) / LINE_HEIGHT\\n    })\\n  }\\n\\n  updateDay = (value: number, fields: number) => {\\n    const { _start, _end, _updateValue } = this.pickerDate\\n\\n    _updateValue[fields] = value\\n\\n    const currentYear = _updateValue[0]\\n    const currentMonth = _updateValue[1]\\n    const currentDay = _updateValue[2]\\n\\n    // 滚动年份\\n    if (fields === 0) {\\n      const monthRange = getMonthRange(_start, _end, currentYear)\\n      const max = monthRange[monthRange.length - 1]\\n      const min = monthRange[0]\\n\\n      if (currentMonth > max) _updateValue[1] = max\\n      if (currentMonth < min) _updateValue[1] = min\\n      const index = monthRange.indexOf(_updateValue[1])\\n      const height = TOP - LINE_HEIGHT * index\\n\\n      this.updateDay(_updateValue[1], 1)\\n      this.updateHeight(height, \'1\')\\n    } else if (fields === 1) {\\n      const dayRange = getDayRange(_start, _end, currentYear, currentMonth)\\n      const max = dayRange[dayRange.length - 1]\\n      const min = dayRange[0]\\n\\n      if (currentDay > max) _updateValue[2] = max\\n      if (currentDay < min) _updateValue[2] = min\\n      const index = dayRange.indexOf(_updateValue[2])\\n      const height = TOP - LINE_HEIGHT * index\\n\\n      this.updateDay(_updateValue[2], 2)\\n      this.updateHeight(height, \'2\')\\n    }\\n  }\\n\\n  // 单列选择器\\n  getSelector = () => {\\n    return (\\n      <taro-picker-group\\n        range={this.range}\\n        rangeKey={this.rangeKey}\\n        height={this.height[0]}\\n        updateHeight={this.updateHeight}\\n        columnId=\'0\'\\n      />\\n    )\\n  }\\n\\n  // 多列选择器\\n  getMultiSelector = () => {\\n    return this.range.map((range, index) => {\\n      return (\\n        <taro-picker-group\\n          range={range}\\n          rangeKey={this.rangeKey}\\n          height={this.height[index]}\\n          updateHeight={this.updateHeight}\\n          onColumnChange={this.handleColumnChange}\\n          columnId={String(index)}\\n        />\\n      )\\n    })\\n  }\\n\\n  // 时间选择器\\n  getTimeSelector = () => {\\n    const hourRange = hoursRange.slice()\\n    const minRange = minutesRange.slice()\\n    return [\\n      <taro-picker-group\\n        mode=\'time\'\\n        range={hourRange}\\n        height={this.height[0]}\\n        updateHeight={this.updateHeight}\\n        columnId=\'0\'\\n      />,\\n      <taro-picker-group\\n        mode=\'time\'\\n        range={minRange}\\n        height={this.height[1]}\\n        updateHeight={this.updateHeight}\\n        columnId=\'1\'\\n      />\\n    ]\\n  }\\n\\n  // 日期选择器\\n  getDateSelector = () => {\\n    const { fields, height } = this\\n    const { _start, _end, _updateValue } = this.pickerDate\\n    const currentYear = _updateValue[0]\\n    const currentMonth = _updateValue[1]\\n\\n    const yearRange = getYearRange(_start.getFullYear(), _end.getFullYear())\\n      .map(item => `${item}年`)\\n    const monthRange = getMonthRange(_start, _end, currentYear)\\n      .map(item => `${item < 10 ? `0${item}` : item}月`)\\n    const dayRange = getDayRange(_start, _end, currentYear, currentMonth)\\n      .map(item => `${item < 10 ? `0${item}` : item}日`)\\n\\n    const renderView = [\\n      <taro-picker-group\\n        mode=\'date\'\\n        range={yearRange}\\n        height={height[0]}\\n        updateDay={this.updateDay}\\n        updateHeight={this.updateHeight}\\n        columnId=\'0\'\\n      />\\n    ]\\n    if (fields === \'month\' || fields === \'day\') {\\n      renderView.push(\\n        <taro-picker-group\\n          mode=\'date\'\\n          range={monthRange}\\n          height={height[1]}\\n          updateDay={this.updateDay}\\n          updateHeight={this.updateHeight}\\n          columnId=\'1\'\\n        />\\n      )\\n    }\\n    if (fields === \'day\') {\\n      renderView.push(\\n        <taro-picker-group\\n          mode=\'date\'\\n          range={dayRange}\\n          height={height[2]}\\n          updateDay={this.updateDay}\\n          updateHeight={this.updateHeight}\\n          columnId=\'2\'\\n        />\\n      )\\n    }\\n\\n    return renderView\\n  }\\n\\n  render () {\\n    const {\\n      name,\\n      mode,\\n      fadeOut,\\n      hidden\\n    } = this\\n\\n    // 选项条\\n    let pickerGroup\\n    switch (mode) {\\n      case \'multiSelector\':\\n        pickerGroup = this.getMultiSelector()\\n        break\\n      case \'time\':\\n        pickerGroup = this.getTimeSelector()\\n        break\\n      case \'date\':\\n        pickerGroup = this.getDateSelector()\\n        break\\n      default:\\n        pickerGroup = this.getSelector()\\n    }\\n\\n    // 动画类名控制逻辑\\n    const clsMask = classNames(\'weui-mask\', \'weui-animate-fade-in\', {\\n      \'weui-animate-fade-out\': fadeOut\\n    })\\n    const clsSlider = classNames(\'weui-picker\', \'weui-animate-slide-up\', {\\n      \'weui-animate-slide-down\': fadeOut\\n    })\\n    const shouldDivHidden = hidden ? { display: \'none\' } : {}\\n\\n    return (\\n      <Host>\\n        <div onClick={this.showPicker}>\\n          <slot />\\n          <input type=\'hidden\' name={name} value={formatValue(this.pickerValue)} />\\n        </div>\\n        <div\\n          class=\'weui-picker__overlay\'\\n          style={shouldDivHidden}\\n          ref={el => { this.overlay = el }}\\n        >\\n          <div class={clsMask} onClick={this.handleCancel} />\\n          <div class={clsSlider}>\\n            <div class=\'weui-picker__hd\'>\\n              <div class=\'weui-picker__action\' onClick={this.handleCancel}>\\n                取消\\n              </div>\\n              <div class=\'weui-picker__action\' onClick={this.handleChange}>\\n                确定\\n              </div>\\n            </div>\\n            <div class=\'weui-picker__bd\'>{pickerGroup}</div>\\n            <input type=\'hidden\' name={name} value={formatValue(this.pickerValue)} />\\n          </div>\\n        </div>\\n      </Host>\\n    )\\n  }\\n}\\n","import { Component, h, ComponentInterface, Prop, Host, Method, State, Listen } from \'@stencil/core\'\\n\\nimport {\\n  TOP,\\n  LINE_HEIGHT,\\n  MASK_HEIGHT\\n} from \'./constant\'\\n\\n@Component({\\n  tag: \'taro-picker-group\'\\n})\\nexport class TaroPickerGroup implements ComponentInterface {\\n  @Prop() mode: \'time\' | \'date\'\\n  @Prop() range: any[] = []\\n  @Prop() rangeKey: string\\n  @Prop() height: number\\n  @Prop() columnId: string\\n  @Prop() updateHeight: (height: number, columnId: string, needRevise?: boolean) => void\\n  @Prop() onColumnChange: (height: number, columnId: string) => void\\n  @Prop() updateDay: (value: number, fields: number) => void\\n\\n  @State() startY: number\\n  @State() preY: number\\n  @State() hadMove: boolean\\n  @State() touchEnd: boolean\\n  @State() isMove: boolean\\n\\n  getPosition () {\\n    const transition = this.touchEnd ? 0.3 : 0\\n    const transformValue = `translate3d(0, ${this.height}px, 0)`\\n    const transitionValue = `transform ${transition}s`\\n    return {\\n      transform: transformValue,\\n      \'-webkit-transform\': transformValue,\\n      transition: transitionValue,\\n      \'-webkit-transition\': transitionValue\\n    }\\n  }\\n\\n  formulaUnlimitedScroll (range: number, absoluteHeight: number, direction: \'up\' | \'down\') {\\n    const { height, updateHeight, columnId } = this\\n    const factor = direction === \'up\' ? 1 : -1\\n\\n    this.touchEnd = false\\n\\n    // 点击超过范围，点击到补帧时，先跳到另一端的补帧\\n    updateHeight(-range * factor * LINE_HEIGHT + height, columnId)\\n\\n    // 再做过渡动画\\n    requestAnimationFrame(() => {\\n      this.touchEnd = true\\n      const index = Math.round(absoluteHeight / -LINE_HEIGHT) + range * factor\\n      const relativeHeight = TOP - LINE_HEIGHT * index\\n      updateHeight(relativeHeight, columnId, true)\\n    })\\n  }\\n\\n  @Method()\\n  handleMoveStart (clientY: number) {\\n    // 记录第一次的点击位置\\n    this.startY = clientY\\n    this.preY = clientY\\n    this.hadMove = false\\n  }\\n\\n  @Method()\\n  handleMoving (clientY: number) {\\n    const y = clientY\\n    const deltaY = y - this.preY\\n    this.preY = y\\n    this.touchEnd = false\\n\\n    if (Math.abs(y - this.startY) > 10) this.hadMove = true\\n\\n    let newPos = this.height + deltaY\\n\\n    // 处理时间选择器的无限滚动\\n    if (this.mode === \'time\') {\\n      if (this.columnId === \'0\') {\\n        // 数字 28 来自于 4 格补帧 + 0 ～ 23 的 24 格，共 28 格\\n        if (newPos > TOP - LINE_HEIGHT * 3) {\\n          newPos = TOP - LINE_HEIGHT * 27 + deltaY\\n        }\\n        if (newPos < TOP - LINE_HEIGHT * 28) {\\n          newPos = TOP - LINE_HEIGHT * 4 + deltaY\\n        }\\n      } else if (this.columnId === \'1\') {\\n        if (newPos > TOP - LINE_HEIGHT * 3) {\\n          newPos = TOP - LINE_HEIGHT * 63 + deltaY\\n        }\\n        if (newPos < TOP - LINE_HEIGHT * 64) {\\n          newPos = TOP - LINE_HEIGHT * 4 + deltaY\\n        }\\n      }\\n    }\\n\\n    this.updateHeight(newPos, this.columnId)\\n  }\\n\\n  @Method()\\n  handleMoveEnd (clientY: number) {\\n    const {\\n      mode,\\n      range,\\n      height,\\n      updateHeight,\\n      onColumnChange,\\n      columnId\\n    } = this\\n    const max = 0\\n    const min = -LINE_HEIGHT * (range.length - 1)\\n    const endY = clientY\\n\\n    this.touchEnd = true\\n\\n    // touchEnd 时的高度，可能带小数点，需要再处理\\n    let absoluteHeight: number\\n\\n    if (!this.hadMove) {\\n      /** 点击 */\\n      // 屏幕高度\\n      const windowHeight = window.innerHeight\\n      // picker__mask 垂直方向距离屏幕顶部的高度\\n      const relativeY = windowHeight - MASK_HEIGHT / 2\\n\\n      absoluteHeight = height - TOP - (endY - relativeY)\\n\\n      // 处理时间选择器的无限滚动\\n      if (mode === \'time\') {\\n        if (columnId === \'0\') {\\n          // 点击上溢出\\n          // absoluteHeight 是相对模块中点来算的，所以会算多半行，这时要减去这半行，即2.5行\\n          if (absoluteHeight > -LINE_HEIGHT * 2.5) {\\n            return this.formulaUnlimitedScroll(24, absoluteHeight, \'up\')\\n          }\\n          // 点击下溢出\\n          if (absoluteHeight < -LINE_HEIGHT * 28.5) {\\n            return this.formulaUnlimitedScroll(24, absoluteHeight, \'down\')\\n          }\\n        } else if (columnId === \'1\') {\\n          // 点击上溢出\\n          if (absoluteHeight > -LINE_HEIGHT * 2.5) {\\n            return this.formulaUnlimitedScroll(60, absoluteHeight, \'up\')\\n          }\\n          // 点击下溢出\\n          if (absoluteHeight < -LINE_HEIGHT * 64.5) {\\n            return this.formulaUnlimitedScroll(60, absoluteHeight, \'down\')\\n          }\\n        }\\n      }\\n    } else {\\n      /** 滚动 */\\n      absoluteHeight = height - TOP\\n    }\\n\\n    // 边界情况处理\\n    if (absoluteHeight > max) absoluteHeight = 0\\n    if (absoluteHeight < min) absoluteHeight = min\\n\\n    // 先按公式算出 index, 再用此 index 算出一个整数高度\\n    const index = Math.round(absoluteHeight / -LINE_HEIGHT)\\n    const relativeHeight = TOP - LINE_HEIGHT * index\\n\\n    if (this.mode === \'date\') {\\n      if (this.columnId === \'0\') {\\n        this.updateDay(\\n          +this.range[index].replace(/[^0-9]/gi, \'\'),\\n          0\\n        )\\n      }\\n      if (this.columnId === \'1\') {\\n        this.updateDay(\\n          +this.range[index].replace(/[^0-9]/gi, \'\'),\\n          1\\n        )\\n      }\\n      if (this.columnId === \'2\') {\\n        this.updateDay(\\n          +this.range[index].replace(/[^0-9]/gi, \'\'),\\n          2\\n        )\\n      }\\n    }\\n\\n    updateHeight(relativeHeight, columnId, mode === \'time\')\\n    onColumnChange && onColumnChange(relativeHeight, columnId)\\n  }\\n\\n  @Listen(\'mousedown\')\\n  onMouseDown (e: MouseEvent) {\\n    this.isMove = true\\n    this.handleMoveStart(e.clientY)\\n  }\\n\\n  @Listen(\'mousemove\')\\n  onMouseMove (e: MouseEvent) {\\n    e.preventDefault()\\n\\n    if (!this.isMove) return\\n\\n    this.handleMoving(e.clientY)\\n  }\\n\\n  @Listen(\'mouseup\')\\n  @Listen(\'mouseleave\')\\n  onMouseMoveEnd (e: MouseEvent) {\\n    if (!this.isMove) return\\n\\n    this.isMove = false\\n    this.handleMoveEnd(e.clientY)\\n  }\\n\\n  @Listen(\'touchstart\')\\n  onTouchStart (e: TouchEvent) {\\n    this.handleMoveStart(e.changedTouches[0].clientY)\\n  }\\n\\n  @Listen(\'touchmove\')\\n  onTouchMove (e: TouchEvent) {\\n    e.preventDefault()\\n\\n    this.handleMoving(e.changedTouches[0].clientY)\\n  }\\n\\n  @Listen(\'touchend\')\\n  onTouchEnd (e: TouchEvent) {\\n    this.handleMoveEnd(e.changedTouches[0].clientY)\\n  }\\n\\n  render () {\\n    const { range, rangeKey } = this\\n    const pickerItem = range.map(item => {\\n      const content = rangeKey ? item[rangeKey] : item\\n      return (\\n        <div class=\'weui-picker__item\'>{content}</div>\\n      )\\n    })\\n\\n    return (\\n      <Host class=\'weui-picker__group\'>\\n        <div class=\'weui-picker__mask\' />\\n        <div class=\'weui-picker__indicator\' />\\n        <div class=\'weui-picker__content\' style={this.getPosition()}>\\n          {pickerItem}\\n        </div>\\n      </Host>\\n    )\\n  }\\n}\\n"],"mappings":"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"}')}}]);