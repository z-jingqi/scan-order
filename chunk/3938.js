"use strict";(self.webpackJsonp=self.webpackJsonp||[]).push([[3938],{"3938":function(n){n.exports=JSON.parse('{"version":3,"names":["patchEsm","promiseResolve","defineCustomElements","win","options","window","Promise","resolve","then","bootstrapLazy","JSON","parse"],"sources":["../../node_modules/.pnpm/registry.npmjs.org+@stencil+core@2.22.2/node_modules/@stencil/core/internal/client/patch-esm.js","@lazy-external-entrypoint?app-data=conditional"],"sourcesContent":["/*\\n Stencil Client Patch Esm v2.22.2 | MIT Licensed | https://stenciljs.com\\n */\\nimport { BUILD } from \'@stencil/core/internal/app-data\';\\nimport { CSS, plt, win, promiseResolve } from \'@stencil/core\';\\nconst patchEsm = () => {\\n    // NOTE!! This fn cannot use async/await!\\n    // @ts-ignore\\n    if (BUILD.cssVarShim && !(CSS && CSS.supports && CSS.supports(\'color\', \'var(--c)\'))) {\\n        // @ts-ignore\\n        return import(/* webpackChunkName: \\"polyfills-css-shim\\" */ \'./css-shim.js\').then(() => {\\n            if ((plt.$cssShim$ = win.__cssshim)) {\\n                return plt.$cssShim$.i();\\n            }\\n            else {\\n                // for better minification\\n                return 0;\\n            }\\n        });\\n    }\\n    return promiseResolve();\\n};\\nexport { patchEsm };\\n","export { setNonce } from \'@stencil/core\';\\nimport { bootstrapLazy } from \'@stencil/core\';\\nimport { patchEsm } from \'@stencil/core/internal/client/patch-esm\';\\nimport { globalScripts } from \'@stencil/core/internal/app-globals\';\\nexport const defineCustomElements = (win, options) => {\\n  if (typeof window === \'undefined\') return Promise.resolve();\\n  return patchEsm().then(() => {\\n  globalScripts();\\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\\n  });\\n};\\n"],"mappings":"uHAKA,IAAMA,SAAW,WAeb,OAAOC,gBACX,ECjBY,IAACC,qBAAuB,SAACC,EAAKC,GACxC,UAAWC,SAAW,YAAa,OAAOC,QAAQC,UAClD,OAAOP,WAAWQ,MAAK,WAEvB,OAAOC,cAAcC,KAAAC,MAAA,++UAAuCP,EAC9D,GACA,S"}')}}]);