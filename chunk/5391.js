"use strict";(self.webpackJsonp=self.webpackJsonp||[]).push([[5391],{"5391":function(n){n.exports=JSON.parse('{"version":3,"names":["indexCss","WebView","prototype","render","_a","this","src","onLoad","onError","h","class","e","stopPropagation","emit"],"sources":["src/components/web-view/style/index.scss?tag=taro-web-view-core","src/components/web-view/web-view.tsx"],"sourcesContent":["iframe {\\n  border: none;\\n}\\n\\n.taro-webview {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  z-index: 999;\\n  width: 100%;\\n  height: 100%;\\n}\\n","import { Component, h, ComponentInterface, Prop, Event, EventEmitter } from \'@stencil/core\'\\n\\n@Component({\\n  tag: \'taro-web-view-core\',\\n  styleUrl: \'./style/index.scss\'\\n})\\nexport class WebView implements ComponentInterface {\\n  @Prop() src: string\\n\\n  @Event({\\n    eventName: \'load\'\\n  })\\n  onLoad: EventEmitter\\n\\n  @Event({\\n    eventName: \'error\'\\n  })\\n  onError: EventEmitter\\n\\n  render () {\\n    const {\\n      src,\\n      onLoad,\\n      onError\\n    } = this\\n    return (\\n      <iframe\\n        class=\'taro-webview\'\\n        onLoad={(e: Event) => {\\n          e.stopPropagation()\\n          onLoad.emit({ src })\\n        }}\\n        onError={(e: Event) => {\\n          e.stopPropagation()\\n          onError.emit({ src })\\n        }}\\n        src={src}\\n      />\\n    )\\n  }\\n}\\n"],"mappings":"0EAAA,IAAMA,SAAW,qG,ICMJC,QAAO,W,0IAalBA,EAAAC,UAAAC,OAAA,WACQ,IAAAC,EAIFC,KAHFC,EAAGF,EAAAE,IACHC,EAAMH,EAAAG,OACNC,EAAOJ,EAAAI,QAET,OACEC,EAAA,UACEC,MAAM,eACNH,OAAQ,SAACI,GACPA,EAAEC,kBACFL,EAAOM,KAAK,CAAEP,IAAGA,G,EAEnBE,QAAS,SAACG,GACRA,EAAEC,kBACFJ,EAAQK,KAAK,CAAEP,IAAGA,G,EAEpBA,IAAKA,G,WA9BO,G"}')}}]);