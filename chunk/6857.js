"use strict";(self.webpackJsonp=self.webpackJsonp||[]).push([[6857],{"6857":function(A){A.exports=JSON.parse('{"version":3,"names":["indexCss","Checkbox","this","handleChange","e","stopPropagation","_this","onChange","emit","value","prototype","watchId","newVal","isWillLoadCalled","inputEl","setAttribute","componentWillLoad","componentDidRender","id","el","removeAttribute","render","_a","checked","name","color","disabled","nativeProps","h","Host","className","Object","assign","ref","dom","type","class","style","CheckboxGroup","uniqueName","Date","now","toString","function","target","tagName","childList","querySelectorAll","getValues","componentDidLoad","forEach","element","defineProperty","get","childList_1","configurable","Array","from","filter","checkbox","querySelector","map"],"sources":["src/components/checkbox/style/index.scss?tag=taro-checkbox-core","src/components/checkbox/checkbox.tsx","src/components/checkbox/checkbox-group.tsx"],"sourcesContent":[".taro-checkbox {\\n  display: inline-block;\\n  position: relative;\\n\\n  &_checked {\\n    display: inline-block;\\n    position: relative;\\n    top: 5px;\\n    border: 1px solid #d1d1d1;\\n    border-radius: 3px;\\n    width: 23px;\\n    height: 23px;\\n    min-height: 0;\\n    appearance: none;\\n    outline: 0;\\n    background-color: #fff;\\n    vertical-align: 0;\\n    font-size: 23px;\\n    color: #1aad19;\\n\\n    &:checked::before {\\n      display: inline-block;\\n      position: absolute;\\n      left: 50%;\\n      top: 50%;\\n      vertical-align: middle;\\n      text-decoration: inherit;\\n      text-align: center;\\n      text-transform: none;\\n      font-family: weui;\\n      font-style: normal;\\n      font-weight: normal;\\n      font-variant: normal;\\n      font-size: inherit;\\n      color: inherit;\\n      content: \\"\\\\EA08\\";\\n      transform: translate(-50%, -48%) scale(0.73);\\n      speak: none;\\n    }\\n  }\\n}\\n","import { Component, h, ComponentInterface, Prop, Event, EventEmitter, Host, Watch, Element, State } from \'@stencil/core\'\\n\\n@Component({\\n  tag: \'taro-checkbox-core\',\\n  styleUrl: \'./style/index.scss\'\\n})\\nexport class Checkbox implements ComponentInterface {\\n  private inputEl: HTMLInputElement\\n  @Prop() name: string\\n  @Prop() value = \'\'\\n  @Prop() color: string\\n  @Prop({ mutable: true }) id: string\\n  @Prop() checked = false\\n  @Prop() disabled = false\\n  @Prop() nativeProps = {}\\n\\n  @State() isWillLoadCalled = false\\n\\n  @Element() el: HTMLElement\\n\\n  @Watch(\'id\')\\n  watchId (newVal) {\\n    if (!this.isWillLoadCalled) return\\n    if (newVal) this.inputEl.setAttribute(\'id\', newVal)\\n  }\\n\\n  @Event({\\n    eventName: \'checkboxchange\'\\n  })\\n  onChange: EventEmitter\\n\\n  componentWillLoad () {\\n    this.isWillLoadCalled = true\\n  }\\n\\n  componentDidRender () {\\n    this.id && this.el.removeAttribute(\'id\')\\n  }\\n\\n  handleChange = (e: Event) => {\\n    e.stopPropagation()\\n    this.onChange.emit({\\n      value: this.value\\n    })\\n  }\\n\\n  render () {\\n    const { checked, name, color, value, disabled, nativeProps } = this\\n\\n    return (\\n      <Host\\n        className=\'weui-cells_checkbox\'\\n      >\\n        <input\\n          ref={dom => {\\n            if (!dom) return\\n            this.inputEl = dom\\n            if (this.id) dom.setAttribute(\'id\', this.id)\\n          }}\\n          type=\'checkbox\'\\n          value={value}\\n          name={name}\\n          class=\'taro-checkbox_checked\'\\n          style={{ color }}\\n          checked={checked}\\n          disabled={disabled}\\n          onChange={this.handleChange}\\n          {...nativeProps}\\n        />\\n        <slot />\\n      </Host>\\n    )\\n  }\\n}\\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\\nimport { Component, h, ComponentInterface, Host, Prop, Event, EventEmitter, Listen, Element } from \'@stencil/core\'\\n\\n@Component({\\n  tag: \'taro-checkbox-group-core\'\\n})\\nexport class CheckboxGroup implements ComponentInterface {\\n  private uniqueName = Date.now().toString(36)\\n  private value: string[]\\n\\n  @Prop() name\\n\\n  @Element() el: HTMLElement\\n\\n  @Event({\\n    eventName: \'change\'\\n  })\\n  onChange: EventEmitter\\n\\n  @Listen(\'checkboxchange\')\\n  function (e: CustomEvent<{ value: string }>) {\\n    e.stopPropagation()\\n    if ((e.target as Element).tagName !== \'TARO-CHECKBOX-CORE\') return\\n\\n    const childList = this.el.querySelectorAll(\'taro-checkbox-core\')\\n\\n    this.value = this.getValues(childList)\\n\\n    this.onChange.emit({\\n      value: this.value\\n    })\\n  }\\n\\n  componentDidLoad () {\\n    const childList = this.el.querySelectorAll(\'taro-checkbox-core\')\\n\\n    childList.forEach((element) => {\\n      element.setAttribute(\'name\', this.name || this.uniqueName)\\n    })\\n\\n    Object.defineProperty(this.el, \'value\', {\\n      get: () => {\\n        if (!this.value) {\\n          const childList = this.el.querySelectorAll(\'taro-checkbox-core\')\\n          this.value = this.getValues(childList)\\n        }\\n        return this.value\\n      },\\n      configurable: true\\n    })\\n  }\\n\\n  getValues (childList: NodeListOf<HTMLTaroCheckboxCoreElement>) {\\n    return Array.from(childList)\\n      .filter(element => {\\n        const checkbox: HTMLInputElement | null = element.querySelector(\'input\')\\n        return checkbox?.checked\\n      })\\n      .map(element => element.value)\\n  }\\n\\n  render () {\\n    return (\\n      <Host />\\n    )\\n  }\\n}\\n"],"mappings":"oGAAA,IAAMA,SAAW,kvB,ICMJC,SAAQ,W,qGAiCnBC,KAAAC,aAAe,SAACC,GACdA,EAAEC,kBACFC,EAAKC,SAASC,KAAK,CACjBC,MAAOH,EAAKG,O,iCAjCA,G,oDAGE,M,cACC,M,iBACG,G,sBAEM,K,CAK5BR,EAAAS,UAAAC,QAAA,SAASC,GACP,IAAKV,KAAKW,iBAAkB,OAC5B,GAAID,EAAQV,KAAKY,QAAQC,aAAa,KAAMH,E,EAQ9CX,EAAAS,UAAAM,kBAAA,WACEd,KAAKW,iBAAmB,I,EAG1BZ,EAAAS,UAAAO,mBAAA,WACEf,KAAKgB,IAAMhB,KAAKiB,GAAGC,gBAAgB,K,EAUrCnB,EAAAS,UAAAW,OAAA,eAAAf,EAAAJ,KACQ,IAAAoB,EAAyDpB,KAAvDqB,EAAOD,EAAAC,QAAEC,EAAIF,EAAAE,KAAEC,EAAKH,EAAAG,MAAEhB,EAAKa,EAAAb,MAAEiB,EAAQJ,EAAAI,SAAEC,EAAWL,EAAAK,YAE1D,OACEC,EAACC,KAAI,CACHC,UAAU,uBAEVF,EAAA,QAAAG,OAAAC,OAAA,CACEC,IAAK,SAAAC,GACH,IAAKA,EAAK,OACV5B,EAAKQ,QAAUoB,EACf,GAAI5B,EAAKY,GAAIgB,EAAInB,aAAa,KAAMT,EAAKY,G,EAE3CiB,KAAK,WACL1B,MAAOA,EACPe,KAAMA,EACNY,MAAM,wBACNC,MAAO,CAAEZ,MAAKA,GACdF,QAASA,EACTG,SAAUA,EACVnB,SAAUL,KAAKC,cACXwB,IAENC,EAAA,a,gPA/Da,G,4BCARU,cAAa,W,kFAChBpC,KAAAqC,WAAaC,KAAKC,MAAMC,SAAS,I,oBAazCJ,EAAA5B,UAAAiC,SAAA,SAAUvC,GACRA,EAAEC,kBACF,GAAKD,EAAEwC,OAAmBC,UAAY,qBAAsB,OAE5D,IAAMC,EAAY5C,KAAKiB,GAAG4B,iBAAiB,sBAE3C7C,KAAKO,MAAQP,KAAK8C,UAAUF,GAE5B5C,KAAKK,SAASC,KAAK,CACjBC,MAAOP,KAAKO,O,EAIhB6B,EAAA5B,UAAAuC,iBAAA,eAAA3C,EAAAJ,KACE,IAAM4C,EAAY5C,KAAKiB,GAAG4B,iBAAiB,sBAE3CD,EAAUI,SAAQ,SAACC,GACjBA,EAAQpC,aAAa,OAAQT,EAAKkB,MAAQlB,EAAKiC,W,IAGjDR,OAAOqB,eAAelD,KAAKiB,GAAI,QAAS,CACtCkC,IAAK,WACH,IAAK/C,EAAKG,MAAO,CACf,IAAM6C,EAAYhD,EAAKa,GAAG4B,iBAAiB,sBAC3CzC,EAAKG,MAAQH,EAAK0C,UAAUM,E,CAE9B,OAAOhD,EAAKG,K,EAEd8C,aAAc,M,EAIlBjB,EAAA5B,UAAAsC,UAAA,SAAWF,GACT,OAAOU,MAAMC,KAAKX,GACfY,QAAO,SAAAP,GACN,IAAMQ,EAAoCR,EAAQS,cAAc,SAChE,OAAOD,IAAQ,MAARA,SAAQ,SAARA,EAAUpC,O,IAElBsC,KAAI,SAAAV,GAAW,OAAAA,EAAQ1C,KAAR,G,EAGpB6B,EAAA5B,UAAAW,OAAA,WACE,OACEO,EAACC,KAAI,K,gIAzDe,U"}')}}]);